x <- rnorm(12, mean = rep(1:3, each=4), sd=0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each=4), sd=0.2)
plot(x,y, col="blue", pch=19, cex=2)
text(x + 0.05, y + 0.05, labels=as.character(1:12))
dataFrame <- data.frame(x,y)
dataFrame <- data.frame(x,y)
dataFrame <- data.frame(x=x,y=y)
set.seed(1234)
x <- rnorm(12, mean = rep(1:3, each=4), sd=0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each=4), sd=0.2)
plot(x,y, col="blue", pch=19, cex=2)
text(x + 0.05, y + 0.05, labels=as.character(1:12))
## kmeans()
# important parameters: x, centers, iter.max, nstart
dataFrame <- data.frame(x,y)
kmeansObj <- kmeans(dataFrame, centers=3)
names(kmeansObj)
kmeansObj
kmeansObj$cluster
par(mar=rep(0.2,4))
plot(x,y, col=kmeansObj$cluster, pch=19, cex=2)
par(mar=rep(0.2,4))
plot(x,y, col=kmeansObj$cluster, pch=19, cex=2)
# centers gives position of centroids
points(kmeansObj$centers, col=1:3, pch=3, cex=3, lwd=3)
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
kmeansObj2 <- kmeans(dataMatrix, centers=3)
par(mfrow=c(1,2), mar=c(2,4,0.1,0.1))
image(t(dataMatrix)[, nrow(dataMatrix):1], yaxt="n")
image(t(dataMatrix)[, order(kmeansObj$cluster)],yaxt="n")
set.seed(12345)
par(mar=rep(0.2,4))
dataMatrix <- matrix(rnorm(400),nrow=40)
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
dataMatrix
par(mar=rep(0.2,4))
heatMap(dataMatrix)
heatmap(dataMatrix)
set.seed(678910)
for (i in 1:40) {
# flip a coin
coinFlip <- rbinom(1, size=1, prob=0.5)
# if coin is heads add a common pattern to that row
if (coinFlip) {
dataMatrix[i, ] <- dataMatrix[i, ] | rep(c(0,3),each=5)
}
}
par(mar=rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
set.seed(678910)
for (i in 1:40) {
# flip a coin
coinFlip <- rbinom(1, size=1, prob=0.5)
# if coin is heads add a common pattern to that row
if (coinFlip==1) {
dataMatrix[i, ] <- dataMatrix[i, ] | rep(c(0,3),each=5)
}
}
par(mar=rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
set.seed(678910)
for (i in 1:40) {
# flip a coin
coinFlip <- rbinom(1, size=1, prob=0.5)
# if coin is heads add a common pattern to that row
if (coinFlip) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0,3),each=5)
}
}
par(mar=rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
par(mar=rep(0.2,4))
heatmap(dataMatrix)
set.seed(678910)
for (i in 1:40) {
# flip a coin
coinFlip <- rbinom(1, size=1, prob=0.5)
# if coin is heads add a common pattern to that row
if (coinFlip==1) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0,3),each=5)
}
}
par(mar=rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
par(mar=rep(0.2,4))
heatmap(dataMatrix)
set.seed(678910)
for (i in 1:40) {
# flip a coin
coinFlip <- rbinom(1, size=1, prob=0.5)
# if coin is heads add a common pattern to that row
if (coinFlip) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0,3),each=5)
}
}
par(mar=rep(0.2,4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
par(mar=rep(0.2,4))
heatmap(dataMatrix)
par(mar=rep(0.2,4))
heatmap(dataMatrix)
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
par(mfrow=c(1,3))
image(t(dataMatrixOrdered)[nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, xlab="Row Mean", ylab="Row", pch=19)
plot(colMeans(dataMatrixOrdered), xlab="Column", ylab="Column Mean", pch=19)
plot(rowMeans(dataMatrixOrdered), 40:1, ,xlab="Row Mean", ylab="Row", pch=19)
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, ,xlab="Row Mean", ylab="Row", pch=19)
plot(colMeans(dataMatrixOrdered), xlab="Column", ylab="Column Mean", pch=19)
setwd("~/Documents/Data/Coursera/Reproducible Research")
if(!file.exists("./data")) { dir.create("./data") }
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile="./data/dataset.zip", method="curl")
unzip(zipfile="./data/dataset.zip", exdir="./data")
setwd("~/Documents/Data/Coursera/Reproducible Research/PeerAssessment1")
# download and unzip data set
if(!file.exists("./data")) { dir.create("./data") }
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile="./data/dataset.zip", method="curl")
unzip(zipfile="./data/dataset.zip", exdir="./data")
activitydata <- read.csv("./data/activity.csv")
View(activitydata)
setwd("~/Repos/RepData_PeerAssessment1")
unzip(zipfile="./activity.zip", exdir="./")
activitydata <- read.csv("./data/activity.csv")
activitydata <- read.csv("./activity.csv")
library(dplyr)
activity <- read.csv("./activity.csv")
activitydata <- tbl_df(activity)
DayGroup <- group_by(activitydata, date)
DayGroup
StepsPerDay <- summarize(DayGroup, sum(steps))
View(StepsPerDay)
?sum
StepsPerDay <- summarize(DayGroup, sum(steps, na.rm=TRUE))
View(StepsPerDay)
StepsPerDay <- summarize(DayGroup, steps = sum(steps, na.rm=TRUE))
View(StepsPerDay)
?hist
hist(StepsPerDay)
StepsPerDay <- summarize(DayGroup, steps = as.numeric(sum(steps, na.rm=TRUE)))
hist(StepsPerDay)
hist(StepsPerDay$steps)
hist(StepsPerDay$steps, breaks=date)
hist(StepsPerDay$steps, breaks=StepsPerDay$date)
hist(StepsPerDay$steps)
hist(StepsPerDay$steps, breaks=61)
hist(StepsPerDay$date, breaks=61)
library(datasets)
hist(airquality$Ozone)
MeanStepsPerDay <- summarize(DayGroup, steps = as.numeric(mean(steps, na.rm=TRUE)))
View(MeanStepsPerDay)
?mean
MeanStepsPerDay <- summarize(DayGroup, mean(steps))
View(MeanStepsPerDay)
MeanStepsPerDay <- summarize(DayGroup, mean(steps, na.rm=TRUE))
View(MeanStepsPerDay)
?median
MedianStepsPerDay <- summarize(DayGroup, median(steps, na.rm=TRUE))
View(MedianStepsPerDay)
MedianStepsPerDay <- summarize(DayGroup, median(steps))
View(MedianStepsPerDay)
MedianStepsPerDay <- summarize(DayGroup, as.numeric(median(steps)))
View(MedianStepsPerDay)
?is.na
is.na(activitydata$steps)
colSums(is.na(activitydata$steps))
?colSums
colSums(is.na(activitydata$steps), dims = 1)
View(activity)
activity$steps <- as.numeric(activity$steps)
activitydata <- tbl_df(activity)
colSums(is.na(activitydata$steps), dims = 1)
colSums(is.na(activitydata$steps))
colSums(is.na(activitydata$steps),na.rm = TRUE)
colSums(is.na(activitydata$steps), dims = 1)
sum(is.na(activitydata$steps))
TotalNAs <- sum(is.na(activitydata$steps))
TotalNAs
class(TotalNAs)
DayGroup <- group_by(activitydata, date)
StepsPerDay <- summarize(DayGroup, steps = sum(steps, na.rm=TRUE))
hist(StepsPerDay$steps)
library(ggplot2)
View(StepsPerDay)
qplot(steps, data=StepsPerDay, geom="histogram")
qplot(date, data=StepsPerDay, geom="histogram")
hist(StepsPerDay$steps)
MeanStepsPerDay <- summarize(DayGroup, mean(steps))
View(MedianStepsPerDay)
View(MeanStepsPerDay)
mean(StepsPerDay$steps)
MedianStepsPerDay <- median(StepsPerDay$steps)
MeanStepsPerDay <- mean(StepsPerDay$steps)
MedianStepsPerDay <- median(StepsPerDay$steps)
plot(StepsPerDay, type="l")
IntervalGroup <- group_by(activitydata, interval)
View(IntervalGroup)
IntervalMeanSteps <- summarize(IntervalGroup, mean(steps, na.rm=TRUE))
View(IntervalMeanSteps)
plot(IntervalMeanSteps, type="l", xlab="Interval", ylab="Average Number of Steps",
main="Average Daily Activity Pattern")
?max
IntervalMeanSteps <- summarize(IntervalGroup, MeanSteps = mean(steps, na.rm=TRUE))
View(IntervalMeanSteps)
max(IntervalMeanSteps$MeanSteps)
filter(IntervalMeanSteps, MeanSteps==max)
filter(IntervalMeanSteps, IntervalMeanSteps$MeanSteps==max)
max <- max(IntervalMeanSteps$MeanSteps)
filter(IntervalMeanSteps, IntervalMeanSteps$MeanSteps==max)
maxInterval <- filter(IntervalMeanSteps, IntervalMeanSteps$MeanSteps==max)
maxInterval$interval
?impute
View(StepsPerDay)
View(DayGroup)
View(StepsPerDay)
StepsPerDay <- summarize(DayGroup, steps = sum(steps))
hist(StepsPerDay$steps)
StepsPerDay <- summarize(DayGroup, steps = sum(steps, na.rm=TRUE))
hist(StepsPerDay$steps)
StepsPerDay <- summarize(DayGroup, steps = sum(steps))
StepsPerDay <- summarize(DayGroup, steps = sum(steps, na.rm=TRUE))
StepsPerDay <- summarize(DayGroup, steps = sum(steps))
hist(StepsPerDay$steps)
library(Hmisc)
?impute
DF <- data.frame(age = c(10, 20, NA, 40), sex = c('male','female'))
View(DF)
DF$imputed_age <- with(DF, impute(age, mean))
View(DF)
?with
View(IntervalMeanSteps)
?ifelse
irisdata <- iris
iris2 <- iris
set.seed(1)
iris2[-5] <- lapply(iris2[-5], function(x) {
x[sample(length(x), sample(10, 1))] <- NA
x
})
View(irisdata)
View(iris2)
library(dplyr)
iris2New <- iris2 %>%
group_by(Species) %>%
mutate_each(funs(mean=mean(., na.rm=TRUE)), contains("."))
View(iris2New)
iris2[,-5][is.na(iris2)[,-5]] <- iris2New[,-5][is.na(iris2)[,-5]]
iris2New <- iris2 %>%
group_by(Species) %>%
mutate_each(funs(mean=mean(., na.rm=TRUE)), contains("."))
iris2[,-5][is.na(iris2)[,-5]] <- iris2New[,-5][is.na(iris2)[,-5]]
iris2
iris4 <-  iris2 %>%
group_by(Species) %>%
mutate_each(funs(ifelse(is.na(.), mean(., na.rm=TRUE), .)), contains(".") )
View(iris4)
activitydata2<- tbl_df(activity)
View(iris2)
View(activitydata2)
activitydata3 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(ifelse(is.na(.), mean(., na.rm=TRUE), .)), contains("."))
View(activitydata3)
activitydata3
?mutate_each
activitydata3 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(ifelse(is.na(.), mean(., na.rm=TRUE), .)))
activitydata3
View(activitydata3)
View(IntervalMeanSteps)
View(IntervalMeanSteps)
View(activitydata3)
activitydata3 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(ifelse(is.na(.), mean(., na.rm=TRUE), 1)))
View(activitydata3)
activitydata3 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(ifelse(is.na(.), mean(., na.rm=TRUE), steps)))
View(activitydata3)
activitydata3 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(ifelse(is.na(.), mean(., na.rm=TRUE), 1)))
View(activitydata3)
activitydata3 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(ifelse(is.na(steps), mean(steps, na.rm=TRUE), 1)))
View(activitydata3)
activitydata3 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(ifelse(is.na(steps), mean(steps, na.rm=TRUE), .)))
View(activitydata3)
activitydata3 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(ifelse(is.na(steps), mean(steps, na.rm=TRUE), steps)))
View(activitydata3)
fun1 <- function(x) ifelse(is.na(x), mean(x, na.rm=TRUE), x)
activitydata2
View(activitydata)
activitydata3 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(ifelse(is.na(.), mean(., na.rm=TRUE), .)), contains("."))
View(activitydata3)
activitydata22 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(fun1), contains("."))
View(activitydata22)
activitydata22 <- activitydata2 %>%
group_by(interval) %>%
mutate_each(funs(fun1), steps)
View(activitydata22)
View(activitydata)
NAforMean <- function(x) ifelse(is.na(x), mean(x, na.rm=TRUE), x)
activitydata2 <- activitydata %>%
group_by(interval) %>%
mutate_each(funs(NAforMean), steps)
View(activitydata2)
activitydata2
hist(activitydata2$steps)
hist(activitydata$steps)
DayGroup2 <- group_by(activitydata2, date)
DayGroup2
StepsPerDay2 <- summarize(DayGroup2, steps = sum(steps))
StepsPerDay2 <- summarize(DayGroup2, steps = sum(steps))
DayGroup <- group_by(activitydata, date)
StepsPerDay <- summarize(DayGroup, steps = sum(steps))
StepsPerDay <- summarize(DayGroup, steps = sum(steps, na.rm=TRUE))
hist(StepsPerDay$steps)
activity <- read.csv("./activity.csv")
activity$steps <- as.numeric(activity$steps)
activitydata <- tbl_df(activity)
DayGroup <- group_by(activitydata, date)
StepsPerDay <- summarize(DayGroup, steps = sum(steps, na.rm=TRUE))
?summarize
StepsPerDay <- summarize(DayGroup, sum(steps))
StepsPerDay <- summarize(DayGroup, sum(steps, na.rm=TRUE))
DayGroup
StepsPerDay <- summarize(DayGroup, mean(steps, na.rm=TRUE))
StepsPerDay <- summarize(DayGroup, sum(steps, na.rm=TRUE))
StepsPerDay <- summarise(DayGroup, sum(steps, na.rm=TRUE))
StepsPerDay <- summarise(DayGroup, sum(steps, na.rm=TRUE))
hist(StepsPerDay$steps)
View(StepsPerDay)
hist(StepsPerDay$steps)
StepsPerDay <- summarise(DayGroup, steps = sum(steps, na.rm=TRUE))
hist(StepsPerDay$steps)
MeanStepsPerDay <- mean(StepsPerDay$steps)
MedianStepsPerDay <- median(StepsPerDay$steps)
IntervalGroup <- group_by(activitydata, interval)
IntervalMeanSteps <- summarize(IntervalGroup, MeanSteps = mean(steps, na.rm=TRUE))
IntervalMeanSteps <- summarise(IntervalGroup, MeanSteps = mean(steps, na.rm=TRUE))
plot(IntervalMeanSteps, type="l", xlab="Interval", ylab="Average Number of Steps",
main="Average Daily Activity Pattern")
max <- max(IntervalMeanSteps$MeanSteps)
maxInterval <- filter(IntervalMeanSteps, IntervalMeanSteps$MeanSteps==max)
maxInterval$interval
TotalNAs <- sum(is.na(activitydata$steps))
NAforMean <- function(x) ifelse(is.na(x), mean(x, na.rm=TRUE), x)
activitydata2 <- activitydata %>%
group_by(interval) %>%
mutate_each(funs(NAforMean), steps)
DayGroup2 <- group_by(activitydata2, date)
StepsPerDay2 <- summarise(DayGroup2, steps = sum(steps))
hist(StepsPerDay$steps)
hist(StepsPerDay2$steps)
MeanStepsPerDay2 <- mean(StepsPerDay2$steps)
MedianStepsPerDay2 <- median(StepsPerDay2$steps)
?weekday
?weekdays
View(activitydata2)
activitydata2$date2 <- as.Date(activitydata2$data, "%Y-%m-%d")
activitydata2$date2 <- as.Date(activitydata2$date, "%Y-%m-%d")
View(activitydata2)
activitydata2$DayType <- weekdays(activitydata2$date2)
View(activitydata2)
activitydata2 <- activitydata %>%
group_by(interval) %>%
mutate_each(funs(NAforMean), steps)
activitydata2$date2 <- as.Date(activitydata2$date, "%Y-%m-%d")
activitydata2$DayType <- "weekday"
View(activitydata2)
activitydata2$Weekday <- weekdays(activitydata2$date2)
activitydata2$DayType[activitydata2$Weekday==c("Saturday","Sunday")] <- "weekend"
table(activitydata2$DayType)
table(activitydata2$Weekday)
2592*5
12960+2304
activitydata2$DayType[activitydata2$Weekday== "Saturday"|"Sunday"] <- "weekend"
activitydata2$DayType <- as.factor("weekday")
activitydata2$DayType[activitydata2$Weekday==c("Saturday","Sunday")] <- "weekend"
activitydata2$DayType <- as.factor("weekday")
activitydata2$DayType[activitydata2$Weekday== "Saturday"|"Sunday"] <- "weekend"
View(activitydata2)
activitydata2$DayType[activitydata2$Weekday== "Saturday"] <- "weekend"
activitydata2$DayType <- "weekday"
activitydata2$DayType[activitydata2$Weekday== "Saturday"] <- "weekend"
activitydata2$DayType[activitydata2$Weekday== "Sunday"] <- "weekend"
table(activitydata2$DayType)
table(activitydata2$Weekday)
activitydata2$DayType <- "weekday"
table(activitydata2$DayType)
activitydata2$DayType[activitydata2$Weekday== "Saturday"|"Sunday"] <- "weekend"
activitydata2$DayType[activitydata2$Weekday== "Saturday"|"Sunday",] <- "weekend"
activitydata2$DayType <- "weekday"
activitydata2$DayType[activitydata2$Weekday==c("Saturday","Sunday")] <- "weekend"
table(activitydata2$DayType)
activitydata2$DayType[activitydata2$Weekday== "Saturday"] <- "weekend"
table(activitydata2$DayType)
activitydata2$DayType[activitydata2$Weekday== "Sunday"] <- "weekend"
table(activitydata2$DayType)
activitydata2$DayType <- "weekday"
activitydata2$DayType[activitydata2$Weekday== "Saturday"] <- "weekend"
activitydata2$DayType[activitydata2$Weekday== "Sunday"] <- "weekend"
table(activitydata2$DayType)
table(activitydata2$Weekday)
IntervalGroup2 <- group_by(activitydata2, interval, DayType)
IntervalGroup2
IntervalMeanSteps2 <- summarise(IntervalGroup2, MeanSteps = mean(steps)
IntervalMeanSteps2
IntervalMeanSteps2 <- summarise(IntervalGroup2, MeanSteps = mean(steps))
IntervalMeanSteps2
plot(IntervalMeanSteps2, type="l", xlab="Interval", ylab="Average Number of Steps",
main="Average Daily Activity Pattern")
library(ggplot2)
?plot
IntervalMeanSteps2
qplot(MeanSteps,DayType,data=IntervalMeanSteps2)
qplot(MeanSteps,data=IntervalMeanSteps2, facets=.~DayType)
qplot(MeanSteps,data=IntervalMeanSteps2, geom=line ,facets=.~DayType)
qplot(MeanSteps,data=IntervalMeanSteps2, geom=line ,facets=.~DayType)
qplot(MeanSteps,data=IntervalMeanSteps2, geom=c("line") ,facets=.~DayType)
qplot(MeanSteps,data=IntervalMeanSteps2, geom=c("line") ,facets=.~DayType)
?qplot
qplot(MeanSteps,data=IntervalMeanSteps2,facets=.~DayType)
View(IntervalGroup2)
View(IntervalMeanSteps2)
View(IntervalMeanSteps)
View(IntervalMeanSteps2)
View(IntervalMeanSteps)
ggplot(IntervalMeanSteps2, aes(interval,MeanSteps))+facet_wrap(~DayType,nrow=2)
ggplot(IntervalGroup2, aes(interval,MeanSteps))+facet_wrap(~DayType,nrow=2)
ggplot(activitydata2, aes(interval,MeanSteps))+facet_wrap(~DayType,nrow=2)
qplot(IntervalMeanSteps2, aes(interval,MeanSteps))+facet_wrap(~DayType,nrow=2)
activitydata2$DayType <- as.factor(activitydata2$DayType)
ggplot(activitydata2, aes(interval,MeanSteps))+facet_wrap(~DayType,nrow=2)
qplot(IntervalMeanSteps2, aes(interval,MeanSteps))+facet_wrap(~DayType,nrow=2)
qplot(activitydata2, aes(interval,MeanSteps))+facet_wrap(~DayType,nrow=2)
?stat_summary
weekdayData <- filter(IntervalMeanSteps2, DayType=="weekday")
View(weekdayData)
weekendData <- filter(IntervalMeanSteps2, DayType=="weekend")
op=par(mfrow=c(4,1))
par(mfrow=c(4,1))
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday")
plot(weekendData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekend")
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday")
weekendData
plot(IntervalMeanSteps2, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday")
plot(IntervalMeanSteps, type="l", xlab="Interval", ylab="Average Number of Steps",
main="Average Daily Activity Pattern")
weekdayData <- select(weekdayData, interval, MeanSteps)
weekendData <- select(weekendData, interval, MeanSteps)
View(weekdayData)
View(IntervalMeanSteps)
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday")
plot(weekendData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekend")
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday")
plot(weekendData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekend")
par(mfrow=c(4,1)), mar=c(2,4,0.1,0.1))
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday")
plot(weekendData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekend")
par(mfrow=c(4,1))
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday")
plot(weekendData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekend")
?plot
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday", height=10)
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday", height=10)
plot(weekendData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekend")
par(mfrow=c(2,1), mar=c(4,4,2,1))
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday", height=10)
plot(weekendData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekend")
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday")
plot(weekendData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekend")
plot(weekdayData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekday")
plot(weekendData, type="l", xlab="Interval", ylab="Number of Steps",
main="weekend")
